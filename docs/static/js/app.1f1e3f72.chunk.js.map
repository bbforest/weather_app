{"version":3,"sources":["Loading.js","Weather.js","App.js"],"names":["Loading","View","style","styles","container","StatusBar","barStyle","Text","text","StyleSheet","create","flex","justifyContent","paddingHorizontal","paddingVertical","backgroundColor","color","fontSize","Weather","local_cond","local_icon","temp","cond","temp_min","temp_max","feels_like","icon","Korean","name","ico","LinearGradient","colors","FontAwesome5","size","solid","PropTypes","number","isRequired","Clear","Thunderstorm","Drizzle","Rain","Snow","Clouds","Mist","alignItems","API_KEY","state","isLoading","getWeather","latitude","longitude","a","async","axios","get","data","main","weather","setState","getLocation","Location","coords","Alert","alert","this","Math","round","React","Component"],"mappings":"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","file":"static/js/app.1f1e3f72.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Text, View, StatusBar } from 'react-native';\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <View style={styles.container}>\r\n            <StatusBar barStyle=\"light-content\" />\r\n            <Text style={styles.text}>날씨 로딩중...</Text>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: \"flex-end\",\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 100,\r\n        backgroundColor: \"yellow\"\r\n    },\r\n    text: {\r\n        color: \"#2c2c2c\",\r\n        fontSize: 30\r\n    }\r\n});","import React from \"react\";\r\nimport { View, Text, StyleSheet, StatusBar, Image } from \"react-native\";\r\nimport PropTypes from \"prop-types\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport FontAwesome5 from 'react-native-vector-icons/FontAwesome5';\r\n\r\nexport default function Weather({ temp, cond, temp_min, temp_max, feels_like, icon }) {\r\n    //한국어가 존재하면 표시, 없으면 영어로 표시\r\n    var local_cond, local_icon;\r\n    if(Korean[cond]?.name == null) {\r\n        local_cond = cond;\r\n        local_icon = `http://openweathermap.org/img/wn/${icon}@4x.png`;\r\n    }\r\n    else{\r\n        local_cond = Korean[cond]?.name;\r\n        local_icon = Korean[cond]?.ico;\r\n    }\r\n\r\n    return (\r\n        <LinearGradient colors={[\"#68B1FF\", \"#82BEFF\"]} style={style.container}>\r\n            <StatusBar barStyle=\"light-content\" />\r\n            <View style={style.container}>\r\n                {/* 아이콘 */}\r\n                <FontAwesome5 name={local_icon} size={300} solid/>\r\n                {/* 19°C */}\r\n                <Text style={{ fontSize: 50 }}>{temp}°C</Text>\r\n                {/* 17° / 21° | 체감온도 18° */}\r\n                <Text style={{ fontSize: 20 }}><Text style={{ color: \"blue\" }}>{temp_min}°</Text> / <Text style={{ color: \"red\" }}>{temp_max}°</Text> | 체감온도 {feels_like}°</Text>\r\n            </View>\r\n            <View style={style.container}>\r\n                {/* 맑음 */}\r\n                <Text style={{fontSize: 50}}>{local_cond}</Text>\r\n            </View>\r\n        </LinearGradient>\r\n    );\r\n}\r\n\r\nWeather.PropTypes = {\r\n    temp: PropTypes.number.isRequired\r\n};\r\n\r\nconst Korean = {\r\n    Clear: {\r\n        name: \"맑음\",\r\n        ico: \"sun\"\r\n    },\r\n    Thunderstorm: {\r\n        name: \"뇌우\",\r\n        ico: \"bolt\"\r\n    },\r\n    Drizzle: {\r\n        name: \"이슬비\",\r\n        ico: \"cloud-rain\"\r\n    },\r\n    Rain: {\r\n        name: \"비\",\r\n        ico: \"cloud-rain\"\r\n    },\r\n    Snow: {\r\n        name: \"눈\",\r\n        ico: \"snowflake\"\r\n    },\r\n    Clouds: {\r\n        name: \"구름\",\r\n        ico: \"cloud\"\r\n    },\r\n    Mist: {\r\n        name: \"안개\",\r\n        ico: \"smog\"\r\n    }\r\n};\r\n\r\nconst style = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n});","import React from 'react';\r\nimport { Alert } from 'react-native';\r\nimport Loading from './Loading';\r\nimport * as Location from 'expo-location';\r\nimport axios from 'axios';\r\nimport Weather from './Weather';\r\n\r\nconst API_KEY = \"8751d40ce41834e5f214310e34dd9443\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    isLoading: true\r\n  };\r\n  //API 접근\r\n  getWeather = async (latitude, longitude) => {\r\n    const { data: {main: {temp, temp_max, temp_min, feels_like}, weather} } = await axios.get(`http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`);\r\n    this.setState({ isLoading: false, temp, temp_max, temp_min, feels_like, icon: weather[0].icon, cond: weather[0].main})\r\n  };\r\n  //위치 요청\r\n  getLocation = async () => {\r\n    try {\r\n      //위치 권한 요청\r\n      const response = await Location.requestPermissionsAsync();\r\n      //현재 위치 요청\r\n      const { coords: { latitude, longitude } } = await Location.getCurrentPositionAsync();\r\n      //API 날씨 요청\r\n      this.getWeather(latitude, longitude);\r\n      //로딩창 해제\r\n      this.setState({ isLoading: false });\r\n    } catch (error) {\r\n      //오류 반환시\r\n      Alert.alert(\"이런!!\", \"위치를 찾을 수 없습니다! 위치 권한을 허용해주세요!\");\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    //앱 실행시 위치 요청\r\n    this.getLocation();\r\n  }\r\n  //화면 렌더\r\n  render() {\r\n    const { isLoading, temp, temp_max, temp_min, feels_like, cond, icon } = this.state;\r\n    //로딩이 true이면 로딩창, 로딩 끝나면 날씨 표시\r\n    return isLoading ? <Loading /> : <Weather temp={Math.round(temp)} temp_max={Math.round(temp_max)} temp_min={Math.round(temp_min)} feels_like={Math.round(feels_like)} icon={icon} cond={cond} />;\r\n  }\r\n}\r\n"],"sourceRoot":""}